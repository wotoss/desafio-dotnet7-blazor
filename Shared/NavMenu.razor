<!--este componente (navManager) envia a pagina para uma outra rota-->
@inject NavigationManager NavManager
@using Data.Servicos
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage BrowserStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">[ Programador-Camisa-10 ]</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <!--quando renderiza ele faz um href -->
        <!--quando você esta usando o conceito de single-page-aplication-->
        <!--ao invês dele dá um reload na tela ele usa o ajax em js-->
        <!--faz um fetch no (java script)-->
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="clientes">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Listar Clientes
            </NavLink>
        </div>
       <!--criar o Sair-->
       <!--só mostra o (sair) se existir o (token)-->
       <!--se não for (vazio ou null) então temos o token e mostramos o sair-->
       @if(!string.IsNullOrEmpty(token))
       {
        <div class="nav-item px-3">
            <a href="" @onclick="sair" class="nav-link" >
                <span class="oi oi-exit" aria-hidden="true"></span> Sair
            </a>
        </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

      
    private string? token { get; set; }
  
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //recebo o meu token e preciso passar ele na BuscarPorId(Id, token);
        token = await AdministradorServico.GetToken(BrowserStorage);
        
    }

    //montantdo método sair
    private async Task sair()
    {
        //eu (deleto ou limpo) o (admLogado) do meu (localStorage)
        await BrowserStorage.DeleteAsync("admLogado");
        NavManager.NavigateTo("/login");
    }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

/*
  28-09-2023
  repare que este ToggleNavMenu => quando clicamos ele abre e fecha a tela
  este menu (toggle) nomalmente é feito em (java Script) aqui fazemos em C# 
  Resumo 
  Feito em (C#) e ele converte em (JavaScript).
  Então o blazor faz a compilação do que vc fez em C# em codigo JavaScript para 
  que seja compativel com a maioria dos navegadores.
*/
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
